version: "3.9"

services:
  backend:
    build: "./VK Service Posting"
    container_name: backend
    env_file: "./VK Service Posting/.env"
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    working_dir: /app
    volumes:
      - "./VK Service Posting:/app"
    ports:
      - "8000:8000"
    command: >
      sh -c "
        alembic upgrade head &&
        gunicorn src.main:app -k uvicorn.workers.UvicornWorker -w 4 -b 0.0.0.0:8000
      "
    environment:
      - PYTHONPATH=/app/src

  celery:
    build: "./VK Service Posting"
    env_file: "./VK Service Posting/.env"
    depends_on:
      - backend
      - redis
      - postgres
    volumes:
      - "./VK Service Posting:/app"
    working_dir: /app
    environment:
      - PYTHONPATH=/app/src
    command: celery -A src.celery_app worker --loglevel=info

  frontend:
    build: "./VK Service Posting frontend"
    container_name: frontend
    ports:
      - "80:80"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file: "./VK Service Posting/.env"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

volumes:
  postgres_data:
